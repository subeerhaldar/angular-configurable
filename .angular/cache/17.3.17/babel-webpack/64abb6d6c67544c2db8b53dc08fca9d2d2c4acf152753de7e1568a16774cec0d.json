{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction GridComponent_th_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const col_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(col_r1);\n  }\n}\nfunction GridComponent_tr_8_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const col_r2 = ctx.$implicit;\n    const row_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(row_r3[col_r2]);\n  }\n}\nfunction GridComponent_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, GridComponent_tr_8_td_1_Template, 2, 1, \"td\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.config.properties.columns);\n  }\n}\nexport let GridComponent = /*#__PURE__*/(() => {\n  class GridComponent {\n    constructor() {\n      this.data = []; // Mock data, in real app fetch from dataSource\n    }\n    ngOnInit() {\n      // Mock data fetching\n      this.data = [{\n        id: 1,\n        name: 'John',\n        email: 'john@example.com'\n      }, {\n        id: 2,\n        name: 'Jane',\n        email: 'jane@example.com'\n      }];\n    }\n    static {\n      this.ɵfac = function GridComponent_Factory(t) {\n        return new (t || GridComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: GridComponent,\n        selectors: [[\"app-grid\"]],\n        inputs: {\n          config: \"config\"\n        },\n        decls: 9,\n        vars: 2,\n        consts: [[1, \"grid-container\"], [4, \"ngFor\", \"ngForOf\"]],\n        template: function GridComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n            i0.ɵɵtext(2, \"Grid Widget\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"table\")(4, \"thead\")(5, \"tr\");\n            i0.ɵɵtemplate(6, GridComponent_th_6_Template, 2, 1, \"th\", 1);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(7, \"tbody\");\n            i0.ɵɵtemplate(8, GridComponent_tr_8_Template, 2, 1, \"tr\", 1);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"ngForOf\", ctx.config.properties.columns);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngForOf\", ctx.data);\n          }\n        },\n        dependencies: [i1.NgForOf],\n        styles: [\".grid-container[_ngcontent-%COMP%] {\\n  border: 1px solid #ccc;\\n  padding: 10px;\\n}\\n\\ntable[_ngcontent-%COMP%] {\\n  width: 100%;\\n  border-collapse: collapse;\\n}\\n\\nth[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\n  border: 1px solid #ddd;\\n  padding: 8px;\\n  text-align: left;\\n}\\n\\nth[_ngcontent-%COMP%] {\\n  background-color: #f2f2f2;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ncmlkL2dyaWQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHNCQUFzQjtFQUN0QixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxXQUFXO0VBQ1gseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyIuZ3JpZC1jb250YWluZXIge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgcGFkZGluZzogMTBweDtcclxufVxyXG5cclxudGFibGUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbn1cclxuXHJcbnRoLCB0ZCB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcclxuICBwYWRkaW5nOiA4cHg7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG5cclxudGgge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n      });\n    }\n  }\n  return GridComponent;\n})();","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","col_r1","row_r3","col_r2","ɵɵtemplate","GridComponent_tr_8_td_1_Template","ɵɵproperty","ctx_r3","config","properties","columns","GridComponent","constructor","data","ngOnInit","id","name","email","selectors","inputs","decls","vars","consts","template","GridComponent_Template","rf","ctx","GridComponent_th_6_Template","GridComponent_tr_8_Template"],"sources":["D:\\Code\\angular-configurable\\src\\app\\components\\grid\\grid.component.ts","D:\\Code\\angular-configurable\\src\\app\\components\\grid\\grid.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { WidgetConfig } from '../../models/config.model';\r\n\r\n@Component({\r\n  selector: 'app-grid',\r\n  templateUrl: './grid.component.html',\r\n  styleUrls: ['./grid.component.css']\r\n})\r\nexport class GridComponent implements OnInit {\r\n  @Input() config!: WidgetConfig;\r\n  data: any[] = []; // Mock data, in real app fetch from dataSource\r\n\r\n  ngOnInit(): void {\r\n    // Mock data fetching\r\n    this.data = [\r\n      { id: 1, name: 'John', email: 'john@example.com' },\r\n      { id: 2, name: 'Jane', email: 'jane@example.com' }\r\n    ];\r\n  }\r\n}","<div class=\"grid-container\">\r\n  <h3>Grid Widget</h3>\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th *ngFor=\"let col of config.properties.columns\">{{ col }}</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let row of data\">\r\n        <td *ngFor=\"let col of config.properties.columns\">{{ row[col] }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>"],"mappings":";;;;ICKQA,EAAA,CAAAC,cAAA,SAAkD;IAAAD,EAAA,CAAAE,MAAA,GAAS;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAAdH,EAAA,CAAAI,SAAA,EAAS;IAATJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAS;;;;;IAK3DN,EAAA,CAAAC,cAAA,SAAkD;IAAAD,EAAA,CAAAE,MAAA,GAAc;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;;IAAnBH,EAAA,CAAAI,SAAA,EAAc;IAAdJ,EAAA,CAAAK,iBAAA,CAAAE,MAAA,CAAAC,MAAA,EAAc;;;;;IADlER,EAAA,CAAAC,cAAA,SAA6B;IAC3BD,EAAA,CAAAS,UAAA,IAAAC,gCAAA,gBAAkD;IACpDV,EAAA,CAAAG,YAAA,EAAK;;;;IADiBH,EAAA,CAAAI,SAAA,EAA4B;IAA5BJ,EAAA,CAAAW,UAAA,YAAAC,MAAA,CAAAC,MAAA,CAAAC,UAAA,CAAAC,OAAA,CAA4B;;;ADFxD,WAAaC,aAAa;EAApB,MAAOA,aAAa;IAL1BC,YAAA;MAOE,KAAAC,IAAI,GAAU,EAAE,CAAC,CAAC;;IAElBC,QAAQA,CAAA;MACN;MACA,IAAI,CAACD,IAAI,GAAG,CACV;QAAEE,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAkB,CAAE,EAClD;QAAEF,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAkB,CAAE,CACnD;IACH;;;yBAVWN,aAAa;MAAA;IAAA;;;cAAbA,aAAa;QAAAO,SAAA;QAAAC,MAAA;UAAAX,MAAA;QAAA;QAAAY,KAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;UAAA,IAAAD,EAAA;YCPxB9B,EADF,CAAAC,cAAA,aAA4B,SACtB;YAAAD,EAAA,CAAAE,MAAA,kBAAW;YAAAF,EAAA,CAAAG,YAAA,EAAK;YAGhBH,EAFJ,CAAAC,cAAA,YAAO,YACE,SACD;YACFD,EAAA,CAAAS,UAAA,IAAAuB,2BAAA,gBAAkD;YAEtDhC,EADE,CAAAG,YAAA,EAAK,EACC;YACRH,EAAA,CAAAC,cAAA,YAAO;YACLD,EAAA,CAAAS,UAAA,IAAAwB,2BAAA,gBAA6B;YAKnCjC,EAFI,CAAAG,YAAA,EAAQ,EACF,EACJ;;;YATsBH,EAAA,CAAAI,SAAA,GAA4B;YAA5BJ,EAAA,CAAAW,UAAA,YAAAoB,GAAA,CAAAlB,MAAA,CAAAC,UAAA,CAAAC,OAAA,CAA4B;YAI9Bf,EAAA,CAAAI,SAAA,GAAO;YAAPJ,EAAA,CAAAW,UAAA,YAAAoB,GAAA,CAAAb,IAAA,CAAO;;;;;;;;SDDpBF,aAAa;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}