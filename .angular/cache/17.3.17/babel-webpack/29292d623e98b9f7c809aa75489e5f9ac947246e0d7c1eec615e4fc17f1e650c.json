{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ConfigService = /*#__PURE__*/(() => {\n  class ConfigService {\n    constructor(http) {\n      this.http = http;\n    }\n    getConfig() {\n      return this.http.get('assets/config/sample-config.json');\n    }\n    static {\n      this.ɵfac = function ConfigService_Factory(t) {\n        return new (t || ConfigService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ConfigService,\n        factory: ConfigService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ConfigService;\n})();","map":{"version":3,"names":["ConfigService","constructor","http","getConfig","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Code\\angular-configurable\\src\\app\\services\\config.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { PageConfig } from '../models/config.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfigService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getConfig(): Observable<PageConfig> {\r\n    return this.http.get<PageConfig>('assets/config/sample-config.json');\r\n  }\r\n}"],"mappings":";;AAQA,WAAaA,aAAa;EAApB,MAAOA,aAAa;IAExBC,YAAoBC,IAAgB;MAAhB,KAAAA,IAAI,GAAJA,IAAI;IAAgB;IAExCC,SAASA,CAAA;MACP,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,kCAAkC,CAAC;IACtE;;;yBANWJ,aAAa,EAAAK,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;MAAA;IAAA;;;eAAbR,aAAa;QAAAS,OAAA,EAAbT,aAAa,CAAAU,IAAA;QAAAC,UAAA,EAFZ;MAAM;IAAA;;SAEPX,aAAa;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}